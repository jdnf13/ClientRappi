{"ast":null,"code":"var _jsxFileName = \"/home/david/Repositorios/ClientRappi/src/components/Tienda.jsx\";\nimport React, { useState } from 'react';\nimport '../css/App.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport { Switch, Route, NavLink } from 'react-router-dom';\nimport Carro from '../components/Carro';\nimport Card from '../components/Card';\nimport Footer from '../components/FooterInicio';\n\nconst Tienda = () => {\n  /////////////////////////////////////////////////////////////////////////////////////////////\n  //Se usa el State del componente add, para importar el evento desde Card,\n  //De esta forma, se muestra el numero de items en el carrito\n  const jsonData = require('../data/recursos/products.json');\n\n  let recuperarArray = localStorage.getItem('articulos');\n  let transforArray = [];\n  let items = 0;\n\n  if (recuperarArray !== null) {\n    transforArray = JSON.parse(recuperarArray);\n    items = transforArray.length;\n  }\n\n  const [add, setAdd] = useState(items);\n\n  if (add === 0) {\n    setAdd(null);\n  }\n\n  const añadirItem = (event, arrayItems) => {\n    let recuperarArray = localStorage.getItem('articulos');\n    let transforArray = [];\n    let nuevoArray = [];\n\n    if (recuperarArray !== null) {\n      transforArray = JSON.parse(recuperarArray);\n      nuevoArray = [];\n    }\n\n    transforArray.forEach(item => {\n      if (item.id !== arrayItems[0].id) {\n        nuevoArray.push(item);\n      }\n    });\n    localStorage.setItem('articulos', JSON.stringify(nuevoArray));\n    let arrayFinal = localStorage.getItem('articulos');\n    let arrayCarro = JSON.parse(arrayFinal);\n    let recibirArrayCard = {\n      Cantidad: arrayItems[0].cantidad,\n      Precio: arrayItems[0].pProducto,\n      Producto: arrayItems[0].nProducto,\n      id: arrayItems[0].id\n    };\n    arrayCarro.push(recibirArrayCard);\n    localStorage.setItem('articulos', JSON.stringify(arrayCarro));\n    setAdd(arrayCarro.length);\n  };\n\n  const quitarItem = (event, arrayItems) => {\n    let recuperarArray = localStorage.getItem('articulos');\n    let transforArray = JSON.parse(recuperarArray);\n    let nuevoArray = [];\n    transforArray.forEach(item => {\n      if (item.id !== arrayItems.id) {\n        nuevoArray.push(item);\n      }\n    });\n    localStorage.setItem('articulos', JSON.stringify(nuevoArray));\n\n    if (arrayItems.cantidad >= 1) {\n      let arrayFinal = localStorage.getItem('articulos');\n      let arrayCarro = JSON.parse(arrayFinal);\n      let recibirArrayCard = {\n        Cantidad: arrayItems.cantidad,\n        Precio: arrayItems.pProducto,\n        Producto: arrayItems.nProducto,\n        id: arrayItems.id\n      };\n      arrayCarro.push(recibirArrayCard);\n      localStorage.setItem('articulos', JSON.stringify(arrayCarro));\n      setAdd(arrayCarro.length);\n    } else {\n      setAdd(nuevoArray.length);\n    }\n  }; /////////////////////////////////////////////////////////////////////////////////////////////\n  ///Se crean el state renderizaran las Card de cada articulo en el arrayArticulos///\n\n\n  let CardItem = [];\n  const [CardCompose, setCardCompose] = useState([]);\n  /*React.useEffect(()  =>  {\n      /////////////////////////////////////////////////////////////////////\n      ///////Se Ejecuta la funcion que consume el API de productos/////////\n      ///////Luego de renderizado el componente///////////////////////////\n      getDataService();\n    }, []);*/\n  //const getDataService = async  ()  =>  {\n  ///////////////////Funcion que consume el API////////////////////\n\n  const data = jsonData;\n  console.log('Data desde json', data);\n  renderCard(data); //Llamamos la funcion ue renderiza las card              \n  //}\n\n  const renderCard = productos => {\n    //Renderizando las Cards segun data recibida\n    let Cards = [];\n\n    for (let item = 0; item < productos.length; item++) {\n      CardItem = [/*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg\",\n        key: productos[item].id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        key: productos[item].id,\n        id: productos[item].id,\n        nProducto: productos[item].name,\n        pProducto: productos[item].price,\n        imgProducto: productos[item].image,\n        onClick: añadirItem,\n        onClickRest: quitarItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }))];\n      Cards.push(CardItem);\n    }\n\n    setCardCompose(Cards); //Se modifica el state del Card con cada producto\n  }; ////////////////////////////////////////////////////////////////////////////////////////////\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Mercado Virtual\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carritoCompras\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"borderCarrito\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/Carro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"addItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 38\n    }\n  }, add)), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/Carro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingCartIcon, {\n    style: {\n      color: \"white\",\n      textAling: \"end\",\n      fontSize: \"40\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 38\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, CardCompose)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerCarrusel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/Carro\",\n    component: Carro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Tienda;","map":{"version":3,"sources":["/home/david/Repositorios/ClientRappi/src/components/Tienda.jsx"],"names":["React","useState","ShoppingCartIcon","Switch","Route","NavLink","Carro","Card","Footer","Tienda","jsonData","require","recuperarArray","localStorage","getItem","transforArray","items","JSON","parse","length","add","setAdd","añadirItem","event","arrayItems","nuevoArray","forEach","item","id","push","setItem","stringify","arrayFinal","arrayCarro","recibirArrayCard","Cantidad","cantidad","Precio","pProducto","Producto","nProducto","quitarItem","CardItem","CardCompose","setCardCompose","data","console","log","renderCard","productos","Cards","name","price","image","color","textAling","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport '../css/App.css';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport {Switch,  Route, NavLink} from 'react-router-dom';\nimport Carro from '../components/Carro';\nimport Card from '../components/Card'\nimport Footer from '../components/FooterInicio';\n\n\nconst Tienda    =   ()  =>  {\n    /////////////////////////////////////////////////////////////////////////////////////////////\n    //Se usa el State del componente add, para importar el evento desde Card,\n    //De esta forma, se muestra el numero de items en el carrito\n    const jsonData= require('../data/recursos/products.json');\n\n    let recuperarArray = localStorage.getItem('articulos');\n    let transforArray   =   [];\n    let items = 0;\n    if(recuperarArray !== null){\n        transforArray   =   JSON.parse(recuperarArray);\n        items = transforArray.length;\n    }\n    const [add, setAdd] =  useState(items);\n    if(add === 0){\n        setAdd(null);\n    }\n\n    const añadirItem  =   (event, arrayItems) => {\n        let recuperarArray = localStorage.getItem('articulos');\n        let transforArray   =   [];    \n        let nuevoArray  =   [];\n        if(recuperarArray !== null){\n            transforArray   =   JSON.parse(recuperarArray);    \n            nuevoArray  =   [];\n        }\n        \n        transforArray.forEach(item => {\n            if(item.id !== arrayItems[0].id){\n                nuevoArray.push(item);\n            }\n        });\n        localStorage.setItem('articulos',JSON.stringify(nuevoArray)); \n\n        let arrayFinal = localStorage.getItem('articulos');\n        let arrayCarro = JSON.parse(arrayFinal);\n        let recibirArrayCard  =\n        {\n            Cantidad:arrayItems[0].cantidad,\n            Precio: arrayItems[0].pProducto,\n            Producto: arrayItems[0].nProducto,\n            id: arrayItems[0].id\n        }\n    arrayCarro.push(recibirArrayCard);\n    localStorage.setItem('articulos',JSON.stringify(arrayCarro));  \n    setAdd(arrayCarro.length);\n    }\n\n    const quitarItem    =   (event,arrayItems) =>  {\n       \n        let recuperarArray = localStorage.getItem('articulos');\n        let transforArray   =   JSON.parse(recuperarArray);\n        let nuevoArray  =   [];\n        transforArray.forEach(item => {\n            if(item.id !== arrayItems.id){\n                nuevoArray.push(item);\n            }\n        });\n        localStorage.setItem('articulos',JSON.stringify(nuevoArray)); \n        if(arrayItems.cantidad >= 1){\n            let arrayFinal = localStorage.getItem('articulos');\n            let arrayCarro = JSON.parse(arrayFinal);\n            let recibirArrayCard  =\n            {\n                Cantidad:arrayItems.cantidad,\n                Precio: arrayItems.pProducto,\n                Producto: arrayItems.nProducto,\n                id: arrayItems.id\n            }\n        arrayCarro.push(recibirArrayCard);\n        localStorage.setItem('articulos',JSON.stringify(arrayCarro));  \n        setAdd(arrayCarro.length);\n        }else{\n        setAdd(nuevoArray.length);\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////////////\n    ///Se crean el state renderizaran las Card de cada articulo en el arrayArticulos///\n    let CardItem    =       [];\n    const [CardCompose, setCardCompose] =  useState([]);\n\n    /*React.useEffect(()  =>  {\n        /////////////////////////////////////////////////////////////////////\n        ///////Se Ejecuta la funcion que consume el API de productos/////////\n        ///////Luego de renderizado el componente///////////////////////////\n        getDataService();\n      }, []);*/\n \n      //const getDataService = async  ()  =>  {\n          ///////////////////Funcion que consume el API////////////////////\n          const data   =    jsonData;\n          console.log('Data desde json',data); \n          renderCard(data) //Llamamos la funcion ue renderiza las card              \n      //}\n\n      const renderCard = (productos) =>  {\n          //Renderizando las Cards segun data recibida\n          let Cards = [];\n        for(let item    =    0; item     <   productos.length; item++){\n            \n            CardItem    =    [\n                <div  className=\"col-lg\" key = {productos[item].id}>\n                    \n                    <Card  \n                        key         =   {productos[item].id}                             \n                        id          =   {productos[item].id}\n                        nProducto   =   {productos[item].name}\n                        pProducto   =   {productos[item].price}\n                        imgProducto =   {productos[item].image}\n                        onClick     =   {añadirItem}\n                        onClickRest =   {quitarItem}\n                    />       \n\n                </div>\n            ];\n\n            Cards.push(CardItem);\n\n        }\n        setCardCompose(Cards); //Se modifica el state del Card con cada producto\n      }\n\n    \n    ////////////////////////////////////////////////////////////////////////////////////////////\n    return(\n        <div>\n            <div className=\"container\">\n                <h3>Mercado Virtual</h3>\n            </div>           \n            <div className=\"carritoCompras\">\n                <div className=\"borderCarrito\">\n                <NavLink to=\"/Carro\"><p className=\"addItems\">{add}</p></NavLink>\n                <NavLink to=\"/Carro\"><ShoppingCartIcon style={{color: \"white\", textAling:\"end\", fontSize: \"40\"}} ></ShoppingCartIcon></NavLink>\n                </div>\n            </div>\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    {CardCompose}\n                </div>\n            </div> \n          \n             <div className=\"containerCarrusel\">\n                \n            </div>\n            \n            <Footer></Footer>  \n            <Switch>\n                <Route path=\"/Carro\" component={Carro}/>\n            </Switch>                    \n        </div>\n    )\n}\nexport default Tienda;"]},"metadata":{},"sourceType":"module"}